"use strict";(globalThis["webpackChunkiotapp"]=globalThis["webpackChunkiotapp"]||[]).push([[803],{5803:(e,t,a)=>{a.r(t),a.d(t,{default:()=>w});var s=a(1758);function i(e,t,a,i,o,l){const r=(0,s.g2)("RegisterPage");return(0,s.uX)(),(0,s.Wv)(r)}var o=a(9104);function l(e,t,a,i,l,r){const d=(0,s.g2)("q-card"),n=(0,s.g2)("q-select"),c=(0,s.g2)("q-input"),u=(0,s.g2)("q-btn"),m=(0,s.g2)("q-form"),p=(0,s.g2)("q-page");return(0,s.uX)(),(0,s.Wv)(p,{class:"q-pa-md bg-dark"},{default:(0,s.k6)(()=>[(0,s.bF)(d,{class:"cardd q-mb-md bg-negative"},{default:(0,s.k6)(()=>t[2]||(t[2]=[(0,s.Lk)("div",{class:"row q-pa-md"},[(0,s.Lk)("div",{class:"col"},[(0,s.Lk)("div",{class:"text-h6 text-white"},"Topic page"),(0,s.Lk)("p",{class:"text-white text-caption"}," Please add your rabbitmq topic here to start subscribing realtime data and managing it in the system ")])],-1)])),_:1,__:[2]}),(0,s.bF)(d,{class:"cardd q-pa-md bg-grey-10"},{default:(0,s.k6)(()=>[(0,s.bF)(m,{onSubmit:(0,o.D$)(r.submitRegister,["prevent"]),ref:"formRef",class:"col"},{default:(0,s.k6)(()=>[(0,s.bF)(n,{outlined:"",dense:"",modelValue:l.form.mac_address,"onUpdate:modelValue":t[0]||(t[0]=e=>l.form.mac_address=e),options:l.devicesOptions,label:"MAC Address","label-color":"white",class:"white-outline","input-class":"text-white",color:"white","option-label":"mac_address","option-value":"mac_address","emit-value":"","map-options":"",clearable:"",rules:[e=>!!e||"MAC Address is required"]},null,8,["modelValue","options","rules"]),(0,s.bF)(c,{outlined:"",dense:"",modelValue:l.form.topic,"onUpdate:modelValue":t[1]||(t[1]=e=>l.form.topic=e),label:"Topic","label-color":"white",class:"white-outline","lazy-rules":"",autocomplete:"off","input-class":"text-white",color:"white",rules:[e=>!!e||"Topic is required"]},null,8,["modelValue","rules"]),(0,s.bF)(u,{label:"Submit",type:"submit",color:"white",loading:l.loading,unelevated:"",class:"full-width button-cuy text-capitalize q-mt-md text-black"},null,8,["loading"])]),_:1},8,["onSubmit"])]),_:1})]),_:1})}const r={name:"RegisterPage",data(){return{form:{mac_address:null,topic:""},devicesOptions:[],loading:!1}},mounted(){this.fetchDevices()},methods:{async fetchDevices(){try{const e=localStorage.getItem("token"),t=await this.$api.get("/devices",{headers:{Authorization:`Bearer ${e}`}});this.devicesOptions=t.data.devices||[],console.error(this.devicesOptions)}catch(e){this.$q.notify({type:"negative",message:"Failed to load devices for MAC Address selection"})}},async submitRegister(){const e=await this.$refs.formRef.validate();if(e){this.loading=!0;try{const e=localStorage.getItem("token"),t={mac_address:this.form.mac_address,topic:this.form.topic};await this.$api.post("/device-realtime-data",t,{headers:{Authorization:`Bearer ${e}`}});this.$q.notify({type:"positive",message:"Data submitted successfully!"}),this.$refs.formRef.reset()}catch(e){this.$q.notify({type:"negative",message:e.response?.data?.message||"Submit failed"})}finally{this.loading=!1}}else this.$q.notify({type:"negative",message:"Please fill all required fields"})}}};var d=a(2807),n=a(7716),c=a(3316),u=a(9200),m=a(5801),p=a(9270),g=a(1693),h=a(8582),f=a.n(h);const b=(0,d.A)(r,[["render",l]]),v=b;f()(r,"components",{QPage:n.A,QCard:c.A,QForm:u.A,QSelect:m.A,QInput:p.A,QBtn:g.A});const y={name:"IndexPage",components:{RegisterPage:v}},q=(0,d.A)(y,[["render",i]]),w=q}}]);